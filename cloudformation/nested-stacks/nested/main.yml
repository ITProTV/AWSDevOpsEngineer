AWSTemplateFormatVersion: 2010-09-09
Description: --- Main template
Parameters: 
  VpcId:
    Type: 'AWS::EC2::VPC::Id'
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: >-
      Lockdown SSH access to the bastion host (default can be accessed from
      anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceCount:
    Description: Number of EC2 instances to launch
    Type: Number
    Default: '1'
Mappings:
  Region2Examples:
    us-east-1:
      Examples: 'https://s3.amazonaws.com/cloudformation-examples-us-east-1'
    us-east-2:
      Examples: 'https://s3-us-east-2.amazonaws.com/cloudformation-examples-us-east-2'
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t1.micro:
      Arch: NATHVM64
    t2.nano:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.large:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0ff8a91507f77f867
      HVMG2: ami-0a584ac55a7631c0c
    us-east-2:
      HVM64: ami-0b59bfac6be064b78
      HVMG2: NOT_SUPPORTED
Resources: 
  ScalingGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./autoscaling.yml
      TimeoutInMinutes: 5
      Parameters:
        Subnets: 
          Fn::Join:
            - ","
            - !Ref Subnets
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        InstanceCount: !Ref InstanceCount
        Example: 
          Fn::FindInMap:
            - Region2Examples
            - !Ref 'AWS::Region'
            - Examples
        ImageId:
          Fn::FindInMap:
            - AWSRegionArch2AMI
            - !Ref 'AWS::Region'
            - Fn::FindInMap:
              - AWSInstanceType2Arch
              - !Ref InstanceType
              - Arch
        ALBTargetGroup: 
          Fn::GetAtt:
            - LoadBalancingStack
            - "Outputs.ALBTargetGroup"
        InstanceSecurityGroup: 
          Fn::GetAtt:
            - LoadBalancingStack 
            - "Outputs.InstanceSecurityGroup"
  LoadBalancingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./loadbalancing.yml
      TimeoutInMinutes: 5
      Parameters:
        VpcId: !Ref VpcId
        Subnets: 
          Fn::Join:
            - "," 
            - !Ref Subnets
        SSHLocation: !Ref SSHLocation
Outputs:
  DNSName:
    Description: URL of the website
    Value: !Sub ${LoadBalancingStack.Outputs.DNSName}